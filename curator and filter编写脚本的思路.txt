1、打开myPage-script项目，找到src/main/resources/curator/cn目录下，拷贝一份原来的excel，根据客户提供的excel中的数据进行填写这个excel。(product sheet页面的内容需要填写)
2、打开Constant.java类，修改REGION_ARRAY这个值为：cn。
3、执行Curator类，生成sql脚本，sql文件在src/main/sql/table这个路径下面。
4、备份sql脚本。（备份上次表中的数据）
5、复制生成的sql脚本在数据库中执行。(执行之前需要在sql脚本中添加补充的sql)

6、打开MyPage-Testing项目，找到src/main/resources/curator/cn目录下，拷贝一份原来的excel，根据客户提供的excel中的数据进行填写这个excel，只填写curator页面中的内容。（不填写其他页面中的数据，但是testcase页面中的数据可能会填写）
打开com.aiatss.mypage.curator包中的Constant类，修改REGION_ARRAY这个值国家的代码
7、找到src/main/resources/filter/cn目录下，拷贝一份原来的excel，根据客户提供的excel中的数据进行填写这个excel，只填写filter页面中的内容。（不填写其他页面中的数据，但是testcase页面中的数据可能会填写）
打开com.aiatss.mypage.filter包中的Constant类，修改REGION_ARRAY这个值国家的代码
8、把MyPage-SG-BAU的项目跑起来
9、分别执行curator和filter包中的Main类进行测试。
10、最后会在target/test-result/curator生成测试的curator excel文档，文档中会有测试的结果。绿色就表示通过了。会在target/test-result/filter生成测试的filter excel文档，文档中会有测试的结果。绿色就表示通过了。
说明：测试文档可以重复生成。
11、交给客户的文件有：执行的sql脚本、两个测试通过的excel文档。

expected response：我们期望的结果
actual response：从数据库中查询得到的结果
说明：在编写curator excel测试文件的时候，customer needs中的所有字段要和表中的数据相同，否则测试通过。在编写filter excel测试文件的时候，各个条件的选项中只需要填写对应有的选择就行，不用填写没有的选项。

说明：factor为Age的没有在sql脚本中生成，需要自己手动在sql脚本中编写，同时还需要在t_FACTOR_CATEGORY_REGION表中插入数据。

生成的sql脚本的逻辑：
1、先删除五张表的数据
2、向t_FACTOR表插入数据
3、向t_CATEGORY_REGION表插入数据
4、向t_PRODUCT表插入数据
5、向t_FACTOR_CATEGORY_REGION表插入数据
6、向t_CONDITION_CATEGORY_REGION表插入数据


单独编写CN的脚本的开发思路：
（1）向t_PRODUCT表插入数据  （注意：每个产品都有两条记录，切记）
（2）向t_CONDITION_CATEGORY_REGION插入数据
说明：参考2018-06-05的脚本去写。


回滚脚本：
delete from dbo.t_CONDITION_CATEGORY_REGION where substring(condition_category_region_id,1,11)='CCR20150921'; 
delete from dbo.t_PRODUCT where substring(product_id,1,11)='PRO20150921';

insert into dbo.t_PRODUCT select * from dbo.t_PRODUCT_20180507_bk;
insert into dbo.t_CONDITION_CATEGORY_REGION select * from dbo.t_CONDITION_CATEGORY_REGION_20180507_bk;
                                         
drop table dbo.t_PRODUCT_20180507_bk; 
drop table dbo.t_CONDITION_CATEGORY_REGION_20180507_bk;